-{ extension("class", ...) }

local LoggingWalker = require 'luacp.analysis.LoggingWalker'
local getMetainfo = require 'luacp.analysis.helpers'.getMetainfo

local class TypeWalker extends LoggingWalker
	function new(logger)
		LoggingWalker.prototype.new(self, logger)
	end

	function traverseType(type, node, ...)
		return type
	end

	--- Traverse a node with a type definition
	function traverseTyped(node, ...)
		local metainfo = getMetainfo(node)
		local type = metainfo.type
		if not type then
			type = `UnknownType
			metainfo.type = type
		end

		metainfo.type = self:traverseType(type, node, ...) or type
	end

	function traverse(node, ...)
		local r = LoggingWalker.prototype.traverse(self, node, ...)

		if getMetainfo(node).type then
			self:traverseTyped(node, ...)
		end

		return r
	end

	function traverseDeclaration(node, ...)
		return self:traverseTyped(node, ...) or node
	end
end

return TypeWalker
